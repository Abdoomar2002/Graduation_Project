// <auto-generated />
using System;
using Hatley.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hatley.Migrations
{
    [DbContext(typeof(appDB))]
    [Migration("20240624230723_edit9")]
    partial class edit9
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hatley.Models.Chat", b =>
                {
                    b.Property<int>("Chat_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Chat_ID"));

                    b.Property<int>("Delivery_ID")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.Property<string>("details")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Chat_ID");

                    b.HasIndex("Delivery_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("chats");
                });

            modelBuilder.Entity("Hatley.Models.Comment", b =>
                {
                    b.Property<int>("Comment_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Comment_ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Delivery_ID")
                        .HasColumnType("int");

                    b.Property<int>("Order_id")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Comment_ID");

                    b.HasIndex("Delivery_ID");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("Hatley.Models.Delivery", b =>
                {
                    b.Property<int>("Delivery_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Delivery_ID"));

                    b.Property<string>("Back_National_ID_img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Face_with_National_ID_img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Front_National_ID_img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Governorate_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("National_id")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Zone_ID")
                        .HasColumnType("int");

                    b.HasKey("Delivery_ID");

                    b.HasIndex("Governorate_ID");

                    b.HasIndex("Zone_ID");

                    b.ToTable("delivers");
                });

            modelBuilder.Entity("Hatley.Models.Governorate", b =>
                {
                    b.Property<int>("Governorate_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Governorate_ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Governorate_ID");

                    b.ToTable("governorates");
                });

            modelBuilder.Entity("Hatley.Models.Order", b =>
                {
                    b.Property<int>("Order_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_ID"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Delivery_ID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Detailes_address_from")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Detailes_address_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("East")
                        .HasColumnType("float");

                    b.Property<double?>("North")
                        .HasColumnType("float");

                    b.Property<string>("Order_city_from")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_city_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_governorate_from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_governorate_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Order_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Order_zone_from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Order_zone_to")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("Order_ID");

                    b.HasIndex("Delivery_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Hatley.Models.Rating", b =>
                {
                    b.Property<int>("Rating_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Rating_ID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Delivery_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Id_for_delivery")
                        .HasColumnType("int");

                    b.Property<int?>("Id_for_user")
                        .HasColumnType("int");

                    b.Property<string>("Name_from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name_to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order_ID")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Rating_ID");

                    b.HasIndex("Delivery_ID");

                    b.HasIndex("Order_ID")
                        .IsUnique();

                    b.ToTable("ratings");
                });

            modelBuilder.Entity("Hatley.Models.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("User_ID");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Hatley.Models.Zone", b =>
                {
                    b.Property<int>("Zone_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Zone_ID"));

                    b.Property<double>("East")
                        .HasColumnType("float");

                    b.Property<int?>("Governorate_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("North")
                        .HasColumnType("float");

                    b.HasKey("Zone_ID");

                    b.HasIndex("Governorate_ID");

                    b.ToTable("zones");
                });

            modelBuilder.Entity("Hatley.Models.Chat", b =>
                {
                    b.HasOne("Hatley.Models.Delivery", "Delivery")
                        .WithMany()
                        .HasForeignKey("Delivery_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hatley.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Delivery");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Hatley.Models.Comment", b =>
                {
                    b.HasOne("Hatley.Models.Delivery", "Delivery")
                        .WithMany("Comments")
                        .HasForeignKey("Delivery_ID");

                    b.Navigation("Delivery");
                });

            modelBuilder.Entity("Hatley.Models.Delivery", b =>
                {
                    b.HasOne("Hatley.Models.Governorate", "Governorate")
                        .WithMany("Delivery_Mens")
                        .HasForeignKey("Governorate_ID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Hatley.Models.Zone", "Zone")
                        .WithMany("Delivery_Mens")
                        .HasForeignKey("Zone_ID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Governorate");

                    b.Navigation("Zone");
                });

            modelBuilder.Entity("Hatley.Models.Order", b =>
                {
                    b.HasOne("Hatley.Models.Delivery", "Delivery")
                        .WithMany()
                        .HasForeignKey("Delivery_ID");

                    b.HasOne("Hatley.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Delivery");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hatley.Models.Rating", b =>
                {
                    b.HasOne("Hatley.Models.Delivery", null)
                        .WithMany("ratings")
                        .HasForeignKey("Delivery_ID");

                    b.HasOne("Hatley.Models.Order", "Order")
                        .WithOne()
                        .HasForeignKey("Hatley.Models.Rating", "Order_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Hatley.Models.Zone", b =>
                {
                    b.HasOne("Hatley.Models.Governorate", "Governorate")
                        .WithMany("Zone_Mens")
                        .HasForeignKey("Governorate_ID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("Hatley.Models.Delivery", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("ratings");
                });

            modelBuilder.Entity("Hatley.Models.Governorate", b =>
                {
                    b.Navigation("Delivery_Mens");

                    b.Navigation("Zone_Mens");
                });

            modelBuilder.Entity("Hatley.Models.User", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Hatley.Models.Zone", b =>
                {
                    b.Navigation("Delivery_Mens");
                });
#pragma warning restore 612, 618
        }
    }
}
